initSidebarItems({"enum":[["Async","Return type of future, indicating whether a value is ready or not."],["AsyncSink","The result of an asynchronous attempt to send a value to a sink."]],"mod":[["future","Futures"],["stream","Asynchronous streams"],["task","Tasks used to drive a future computation"]],"trait":[["AsyncRead","Read bytes asynchronously."],["AsyncWrite","Writes bytes asynchronously."],["Future","Trait for types which are a placeholder of a value that may become available at some later point in time."],["FutureExt","An extension trait for `Future` that provides a variety of convenient combinator functions."],["IntoFuture","Class of types which can be converted into a future."],["Read","The `Read` trait allows for reading bytes from a source."],["Sink","A `Sink` is a value into which other values can be sent, asynchronously."],["Stream","A stream of values, not all of which may have been produced yet."],["StreamExt","An extension trait for `Stream` that provides a variety of convenient combinator functions."],["Write","A trait for objects which are byte-oriented sinks."]],"type":[["Poll","Return type of the `Future::poll` method, indicates whether a future's value is ready or not."]]});